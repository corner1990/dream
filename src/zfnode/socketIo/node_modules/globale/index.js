#!/usr/bin/env node
var path = require('path');
var fs = require('fs');
var fse = require('fs-extra');

var Jasmine = require('jasmine');
var jasmine = new Jasmine();

var myArgs = require('optimist').argv;
var help = 'This would be a great place for real help information.';

if(myArgs.h || myArgs.help || myArgs.pomoc) {
  console.log(help);
  process.exit(0);
}

var dir = process.cwd();
var total;
var passed = 0
var myReporter = {
  jasmineStarted: function(suiteInfo) {
      total = suiteInfo.totalSpecsDefined;
  },
  suiteStarted: function(result) {
  },
  specStarted: function(result) {
  },
  specDone: function(result) {
    for(var i = 0; i < result.passedExpectations.length; i++) {
      if(result.passedExpectations[i].passed)  passed++;
    }
  },
  suiteDone: function(result) {
  },

  jasmineDone: function() {
    console.log("\n"+passed +" / "+total);
    if(passed == total) {
      fs.readFile(path.join(dir,".learn", "data.json"),"utf8", function(err,text) {
        if(err) throw err;
        var data = JSON.parse(text);
        fse.copy(path.join(__dirname,"files","lec_"+(data.level+1)), dir, function (err) {
          if(err) throw err;
          console.log("Uspesne splněno");
        });
      })
    }
  }
};
jasmine.addReporter(myReporter);

fs.exists(path.join(dir,'.learn'), function(exists){
    if(!exists) {
      fse.copy(path.join(__dirname,"files","lec_1"), dir, function (err) {
        if(err) throw err;
        console.log("Můžete začít.\n Více se dozvíde v souboru README.md");
      });
    }
    else {
      fs.readFile(path.join(dir,".learn", "data.json"),"utf8", function(err,text) {
        if(err) throw err;
        var data = JSON.parse(text);
        jasmine.loadConfig({
          spec_dir: '.learn',
          spec_files: [
            "**/*[sS]pec.js"
          ],
          helpers: [
            'helpers/**/*.js'
          ]
        });
        jasmine.execute();
      })
    }
});
